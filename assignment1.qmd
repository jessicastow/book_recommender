---
title: "Assignment 1: Recommender Systems"
author: "Jessica Stow (STWJES003@MYUCT.AC.ZA)"
date: "September 2024"
format: 
  html: 
    fig-width: 8
    fig-height: 4
    code-fold: true
---

# Plagiarism declaration

-   I know that plagiarism is wrong.

-   Plagiarism is to use another’s work and pretend that it is one’s own.

-   I have used the required convention for citation and referencing.

-   Each contribution to and quotation in this assignment from the work(s) of other people has been attributed, and has been cited and referenced.

-   This assignment is my own work.

-   I have not allowed, and will not allow, anyone to copy my work with the intention of passing it off as his or her own work.

-   I acknowledge that copying someone else’s assignment or essay, or part of it, is wrong, and declare that this is my own work.

# Objectives

The objectives of this report were as follows:

1\. Build recommender systems that predict the rating a user will give to a book based on each of:

a\) item-based collaborative filtering,

b\) user-based collaborative filtering, and

c\) matrix factorisation.

2\. Assessment and ensemble model:

a\) Assess the accuracy of the matrix factorisation recommender system, using a single train/test sample.

b\) Assess the accuracy of the matrix factorisation recommender system with and without regularisation.

c\) Create a final model that ensembles the predictions from the three approaches, and then assess the accuracy of the ensemble predictions.

# Introduction to Data Mining and Recommender Systems

Recommender systems utilise data mining techniques to offer personalised suggestions by analysing patterns in user preferences and behaviours (Data Mining: Concepts and Techniques, 2012). The collaborative filtering approach specifically focuses on identifying users with similar tastes or preferences, recommending items based on the opinions and actions of those with shared interests. This method may also take into account a user’s social environment to enhance the relevance of the recommendations.

## Cosine Similarity

Cosine similarity is a metric used in both user-based and item-based collaborative filtering to measure how similar two vectors are. 

Given two vectors, $\boldsymbol x$ and $\boldsymbol y$, the cosine similarity is defined as:

$$cos(\theta) = \frac{\boldsymbol x \cdot \boldsymbol y}{||\boldsymbol x|| \ ||\boldsymbol y||} = \frac{\sum_{i=1}^{n}x_iy_i}{\sqrt{\sum_{i=1}^{n}x^2_i} \sqrt{\sum_{i=1}^{n}y^2_i}}$$

Cosine similarity ranges from 0 to 1, with higher values indicating greater similarity. As two vectors become more aligned, the angle between them decreases, and the cosine similarity approaches 1, reflecting highly similar user preferences. Conversely, a larger angle results in a cosine similarity closer to 0, indicating that the preferences are very different.

## User-Based Collaborative Filtering

User-Based Collaborative Filtering accounts for a user's interests by identifying similar users and recommending items that those users have shown interest in (Grus, 2015).

To get an idea of how similar two users are we need to use the cosine similarity metric, which quantifies how alike any two users are based on their preference vectors.

## Item-Based Collaborative Filtering

Item-based collaborative filtering (IBCF) takes an alternative approach by computing similarities between items, rather than users. Recommendations are then generated for each user by aggregating items that are similar to the ones the user has shown interest in (Grus, 2015).  

Cosine similarity is again used to calculate similarity. If two items are of interest to the same users, their similarity will be closer to 1. If no users show interest in both items, their similarity will be closer to 0. Recommendations are generated by summing the similarities of items related to the user's current interests.

## Collaborative filtering with matrix factorisation

Matrix factorisation offers a different approach to collaborative filtering, rooted in linear algebra, where the goal is to fill in missing values within a matrix. Also known as matrix decomposition, it involves representing a matrix as the product of two smaller matrices. The key concept behind this method is the discovery of **latent factors** — hidden features that capture meaningful patterns in the data.

In recommendation systems, matrix factorisation decomposes the user-item ratings matrix into two smaller matrices in such a way that the known ratings are closely approximated. A key advantage of this approach is that, while the original ratings matrix is incomplete (with missing entries), the decomposed matrices are fully populated. This allows for predicting the missing values in the original matrix, effectively filling in the blanks and making recommendations based on the latent factors derived from the data. 

# References

Grus, J. (2015). Data Science from Scratch: First Principles with Python. 1st ed. O'Reilly Media.

Han, J., Kamber, M. & Pei, J. (2012). Data Mining: Concepts and Techniques, Morgan Kaufmann Publishers, San Francisco, CA, USA.
